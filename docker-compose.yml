version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.2
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.2
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m"
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    networks:
      - elastic
    depends_on:
      - elasticsearch

  postgres:
    #entrypoint: ["sleep", "infinity"]
    build: 
      context: ./postgres
      dockerfile: Dockerfile
    env_file: ".env"
    ports:
      - "5432:5432"
    volumes:
      - ./db-data:${PGDATA}
      - .${COMPOSE_VOLUME_WALG_FILE_PREFIX}:${WALG_FILE_PREFIX} # if WALG_FILE_PREFIX is set, otherwise comment this line

  adminer:
    build:
      context: ./adminerneo
      dockerfile: Dockerfile
      args:
        PASSWORD: ${ADMINER_PASSWORD}
    #ports:
    #  - 8081:8081

  spring:
    build:
      context: ./berezovskoye-backend/
      dockerfile: Dockerfile
    # ports:
    #   - "8080:8080"
    depends_on:
      - logstash
      - postgres

  nextjs:
    build:
      context: ./berezovskoye-frontend/
      dockerfile: Dockerfile
    # ports:
    #   - 3000:3000

  nginx-reverse-proxy:
    build:
      context: ./nginx-reverse-proxy/
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - nextjs
      - spring
      - adminer

networks:
  elastic:
    driver: bridge
  monitoring:


volumes:
  elastic_data:
    driver: local
